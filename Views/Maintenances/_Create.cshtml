@model Scribe.Models.Maintenance


<!-- Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createLocationModalLabel">Create Maintenance Log</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <label class="control-label">Device</label>
                    <div class="mb-3">
                        @Html.DropDownList("BrandId", (SelectList)ViewData["BrandId"], "Select Brand", new { @class = "form-control", id = "brand-select" })
                    </div>

                    <div class="mb-3">
                        <select id="model-select" class="form-select" disabled>
                            <option value="">Select Model</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <select asp-for="SerialNumberId" id="serial-number-select" class="form-select" name="SerialNumberId" disabled>
                            <option value="">Select Serial Number</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label asp-for="ServiceDescription" class="control-label"></label>
                        <input asp-for="ServiceDescription" class="form-control" />
                        <span asp-validation-for="ServiceDescription" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ServiceDate" class="control-label"></label>
                        <input asp-for="ServiceDate" class="form-control" />
                        <span asp-validation-for="ServiceDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="NextServiceDate" class="control-label"></label>
                        <input asp-for="NextServiceDate" class="form-control" />
                        <span asp-validation-for="NextServiceDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ConditionId" class="control-label"></label>
                        <select asp-for="ConditionId" class="form-control" asp-items="ViewBag.ConditionId">
                            <option value="">Choose Condition</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="SystemUserId" class="control-label"></label>
                        <select asp-for="SystemUserId" asp-items="@ViewData["Users"] as SelectList" class="form-control">
                            <option value="">-- Select a User --</option>
                        </select>
                    </div>
                    <br />
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


    <script>
        $(document).ready(function () {
            $('#brand-select').on('change', function () {
                const brandId = $(this).val();
                $('#model-select').prop('disabled', !brandId);
                $('#model-select').empty().append('<option value="">Select Model</option>');
                $('#serial-number-select').empty().append('<option value="">Select Serial Number</option>').prop('disabled', true);

                if (brandId) {
                    $.ajax({
                        url: '@Url.Action("GetModelsByBrand", "Maintenances")', // Adjust the controller name
                        type: 'GET',
                        data: { brandId: brandId },
                        success: function (models) {
                            $.each(models, function (i, model) {
                                $('#model-select').append($('<option>').val(model.id).text(model.name));
                            });
                        }
                    });
                }
            });

            $('#model-select').on('change', function () {
                const modelId = $(this).val();
                $('#serial-number-select').prop('disabled', !modelId);
                $('#serial-number-select').empty().append('<option value="">Select Serial Number</option>');

                if (modelId) {
                    $.ajax({
                        url: '@Url.Action("GetSerialNumbersByModel", "Maintenances")', // Adjust the controller name
                        type: 'GET',
                        data: { modelId: modelId },
                        success: function (serialNumbers) {
                            $.each(serialNumbers, function (i, serialNumber) {
                                $('#serial-number-select').append($('<option>').val(serialNumber.id).text(serialNumber.name));
                            });
                        }
                    });
                }
            });

            $('#serial-number-select').on('change', function () {
                const serialNumberId = $(this).val();
                if (serialNumberId) {
                    $.ajax({
                        url: '@Url.Action("GetConditionBySerialNumber", "Maintenances")', // New action to get condition
                        type: 'GET',
                        data: { serialNumberId: serialNumberId },
                        success: function (condition) {
                            $('#ConditionId').val(condition.id); // Set the ConditionId field
                            console.log(condition);
                            console.log("Hello");
                        }
                    });
                }
            });
        });
    </script>
}


<script>
    $(document).ready(function () {
        $('#brand-select').on('change', function () {
            const brandId = $(this).val();
            $('#model-select').prop('disabled', !brandId);
            $('#model-select').empty().append('<option value="">Select Model</option>');
            $('#serial-number-select').empty().append('<option value="">Select Serial Number</option>').prop('disabled', true);

            if (brandId) {
                $.ajax({
                    url: '@Url.Action("GetModelsByBrand", "Maintenances")', // Adjust the controller name
                    type: 'GET',
                    data: { brandId: brandId },
                    success: function (models) {
                        $.each(models, function (i, model) {
                            $('#model-select').append($('<option>').val(model.id).text(model.name));
                        });
                    }
                });
            }
        });

        $('#model-select').on('change', function () {
            const modelId = $(this).val();
            $('#serial-number-select').prop('disabled', !modelId);
            $('#serial-number-select').empty().append('<option value="">Select Serial Number</option>');

            if (modelId) {
                $.ajax({
                    url: '@Url.Action("GetSerialNumbersByModel", "Maintenances")', // Adjust the controller name
                    type: 'GET',
                    data: { modelId: modelId },
                    success: function (serialNumbers) {
                        $.each(serialNumbers, function (i, serialNumber) {
                            $('#serial-number-select').append($('<option>').val(serialNumber.id).text(serialNumber.name));
                        });
                    }
                });
            }
        });

        $('#serial-number-select').on('change', function () {
            const serialNumberId = $(this).val();
            if (serialNumberId) {
                $.ajax({
                    url: '@Url.Action("GetConditionBySerialNumber", "Maintenances")', // New action to get condition
                    type: 'GET',
                    data: { serialNumberId: serialNumberId },
                    success: function (condition) {
                        $('#ConditionId').val(condition.id); // Set the ConditionId field
                        console.log(condition);
                        console.log("Hello");
                    }
                });
            }
        });
    });
</script>

