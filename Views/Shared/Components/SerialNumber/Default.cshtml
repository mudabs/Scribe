@using Scribe.Infrastructure
@model SerialNumberViewModel

@{
    ViewData["Title"] = "SerialNumber";
    Layout = "_Layout";
}

<div class="row">
    <div class="col">
        <h3>@Model.Model.Brand.Name @Model.Model.Name</h3>
        <img src="/media/models/@Model.Model.Image" width="100px" /><br /><br />

        <form asp-action="CreateSerialNumber" method="post" class="form-inline mb-4">
            <input type="hidden" asp-for="Model.Id" name="ModelId" />
            <input type="text" name="Name" class="form-control mr-2" placeholder="Serial Number" id="serialInput" required />
            <button type="submit" class="btn btn-primary">Create</button>
        </form>

        <div class="d-flex align-items-center mb-3">
            <h4 class="mb-0">Existing Serial Numbers (@Model.NumberOfDevices)</h4>
            <button id="toggleFilterButton" class="btn btn-outline-success ml-auto">
                <img src="~/media/icons/static/funnel.svg" alt="Filter" />
            </button>
            <a asp-controller="Models" asp-action="Index" class="btn btn-outline-secondary ml-2">Back to Models</a>
            <button id="toggleButton" class="btn btn-info ml-2">Upload</button>
        </div>

        <div id="uploadForm" style="display:none;">
            <hr />
            <h5>Upload Serial Numbers</h5>
            <form enctype="multipart/form-data" class="mb-4">
                <input type="file" id="fileInput" name="file" class="form-control-file" />
                <input type="hidden" id="modelId" value="@Model.Model.Id" />
                <button type="submit" class="btn btn-primary mt-2">Upload</button>
            </form>
            <hr />
        </div>

        <div id="previewContainer"></div>

        <!-- FILTER SIDEBAR -->
        <div id="filterSection" class="side-nav" style="display:none;">
            <h5>Filters</h5>
            <div class="form-group">
                <label for="nameFilter">Serial Number</label>
                <input id="nameFilter" class="form-control" placeholder="Search..." />
            </div>
            <div class="form-group">
                <label for="userFilter">Allocated To</label>
                <input id="userFilter" class="form-control" placeholder="Name or Group" />
            </div>
            <div class="form-group">
                <label for="conditionFilter">Condition</label>
                <select id="conditionFilter" class="form-control">
                    <option value="">All</option>
                    @foreach (var c in Model.SerialNumbers.Select(s => s.Condition?.Name).Distinct().Where(n => n != null))
                    {
                        <option>@c</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="departmentFilter">Department</label>
                <select id="departmentFilter" class="form-control">
                    <option value="">All</option>
                    @foreach (var d in Model.SerialNumbers.Select(s => s.Department?.Name).Distinct().Where(n => n != null))
                    {
                        <option>@d</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="locationFilter">Location</label>
                <select id="locationFilter" class="form-control">
                    <option value="">All</option>
                    @foreach (var l in Model.SerialNumbers.Select(s => s.Location?.Name).Distinct().Where(n => n != null))
                    {
                        <option>@l</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="checkinFilter">Check‑In Date</label>
                <input type="date" id="checkinFilter" class="form-control" />
            </div>
            <div class="form-group">
                <label for="allocationFilter">Allocation Date</label>
                <input type="date" id="allocationFilter" class="form-control" />
            </div>
        </div>

        <!-- SERIALS TABLE -->
        <table class="table table-hover table-striped" id="serialsTable">
            <thead>
                <tr>
                    <th>Serial Number</th>
                    <th>Allocated To</th>
                    <th>Condition</th>
                    <th>Department</th>
                    <th>Location</th>
                    <th>Check In Date</th>
                    <th>Allocation Date</th>
                    <th>Allocated By</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var s in Model.SerialNumbers)
                {
                    <tr>
                        <td class="serial-name">
                            <span class="display-value">@s.Name</span>
                        </td>
                        <td class="serial-user">
                            <span class="display-value">
                                @(s.ADUsers?.Name ?? (s.Group != null ? s.Group.Name : "N/A"))
                            </span>
                        </td>
                        <td class="serial-condition">
                            <span class="display-value">@s.Condition?.Name</span>
                        </td>
                        <td class="serial-department">
                            <span class="display-value">@s.Department?.Name</span>
                        </td>
                        <td class="serial-location">
                            <span class="display-value">@s.Location?.Name</span>
                        </td>
                        <td class="serial-checkin">
                            <span class="display-value">@s.Creation?.ToString("yyyy-MM-dd")</span>
                        </td>
                        <td class="serial-allocation">
                            <span class="display-value">@s.Allocation?.ToString("yyyy-MM-dd")</span>
                        </td>
                        <td class="serial-allocatedBy">
                            <span class="display-value">@s.AllocatedBy ?? "No User"</span>
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-outline-warning" data-toggle="modal"
                                    data-target="#editModal" onclick="loadEditPartial('SerialNumbers',@s.Id)">
                                Edit
                            </button>
                            |
                            <a class="btn btn-outline-primary btn-sm"
                               asp-controller="SerialNumbers" asp-action="ViewHistory" asp-route-id="@s.Id">
                                View History
                            </a>
                            |
                            <button type="button" class="btn btn-sm btn-outline-danger" data-toggle="modal"
                                    data-target="#deleteModal" onclick="loadDeleteAlloPartial('SerialNumbers',@s.Id)">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            var table = $('#serialsTable').DataTable({
                dom: 'Bfrtip',
                buttons: ['copy','csv','excel','pdf','print']
            });

            // Toggle the filter sidebar
            $('#toggleFilterButton').on('click', function () {
                $('#filterSection').toggle();
            });

            // The filtering logic
            function filterTable() {
                var nameVal = $('#nameFilter').val().toLowerCase();
                var userVal = $('#userFilter').val().toLowerCase();
                var condVal = $('#conditionFilter').val();
                var deptVal = $('#departmentFilter').val();
                var locVal = $('#locationFilter').val();
                var checkinVal = $('#checkinFilter').val();
                var allocVal = $('#allocationFilter').val();

                $('#serialsTable tbody tr').each(function () {
                    var $tr = $(this);
                    var nameMatch = $tr.find('.serial-name .display-value').text().toLowerCase().includes(nameVal);
                    var userMatch = $tr.find('.serial-user .display-value').text().toLowerCase().includes(userVal);
                    var condMatch = !condVal || $tr.find('.serial-condition .display-value').text() === condVal;
                    var deptMatch = !deptVal || $tr.find('.serial-department .display-value').text() === deptVal;
                    var locMatch  = !locVal  || $tr.find('.serial-location .display-value').text() === locVal;
                    var checkinMatch = !checkinVal || $tr.find('.serial-checkin .display-value').text().startsWith(checkinVal);
                    var allocMatch   = !allocVal   || $tr.find('.serial-allocation .display-value').text().startsWith(allocVal);

                    if (nameMatch && userMatch && condMatch && deptMatch && locMatch && checkinMatch && allocMatch) {
                        $tr.show();
                    } else {
                        $tr.hide();
                    }
                });
            }

            // Wire up filter inputs
            $('#nameFilter, #userFilter').on('keyup', filterTable);
            $('#conditionFilter, #departmentFilter, #locationFilter, #checkinFilter, #allocationFilter')
                .on('change input', filterTable);

            // Set focus on the new‑serial input
            $('#serialInput').focus().select();
        });
    </script>

    <style>
        .side-nav {
            position: fixed;
            right: 0;
            top: 70px;
            width: 260px;
            background: #f8f9fa;
            padding: 15px;
            box-shadow: -2px 0 5px rgba(0,0,0,0.2);
            z-index: 1000;
        }
    </style>
}