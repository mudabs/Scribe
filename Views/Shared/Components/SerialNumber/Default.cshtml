@using Scribe.Infrastructure
@model SerialNumberViewModel

@{
    ViewData["Title"] = "SerialNumber";
    var modelId = ViewData["modelId"];
    Layout = "_Layout";
}

<div class="">
    <div class="row">
        <div class="col">
            <h3>@Model.Model.Brand.Name @Model.Model.Name</h3>
            <img src="/media/models/@Model.Model.Image" width="100px" /><br /><br />

            <div style="height:100px;"></div>

            <form asp-action="CreateSerialNumber" method="post">
                <input type="hidden" asp-for="Model.Id" name="ModelId" />
                <div class="form-group">
                    <input type="text" name="Name" class="form-control" placeholder="Serial Number" id="serialInput" required />
                </div>
                <br />
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>

            <div class="row">
                <h4>
                    Existing Serial Numbers (@Model.NumberOfDevices)
                    <span class="ml-auto">
                        <button id="toggleFilterButton" class="btn btn-outline-success position-relative top-0"><img src="~/media/icons/static/funnel.svg" /></button>
                    </span>
                    <a asp-controller="Models" asp-action="Index" class="btn btn-outline-secondary">Back to Models</a>
                   
                </h4>
            </div>

                <h2>Upload Serial Numbers</h2>
                <form id="uploadForm" enctype="multipart/form-data">
                    <input type="file" id="fileInput" name="file" class="form-control" />
                    <input type="hidden" id="modelId" value="@Model.Model.Id"></input>
                    <button type="submit" class="btn btn-primary mt-2">Upload</button>
                </form>
            
           

            <div id="previewContainer"></div>

            

            <table class="table table-hover table-striped" id="serials">
                <thead>
                    <tr>
                        <th>Serial Number</th>
                        <th>Allocated To</th>
                        <th>Condition</th>
                        <th>Department</th>
                        <th>Location</th>
                        <th>Check In Date</th>
                        <th>Allocation Date</th>
                        <th>Allocated By</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var serialNumber in Model.SerialNumbers)
                    {
                        <tr>
                            <td class="serial-name">
                                <span class="display-value">@serialNumber.Name</span>
                                <input type="text" name="Name" value="@serialNumber.Name" class="form-control edit-input" style="display:none;" />
                            </td>
                            <td class="serial-condition">
                                <span class="display-value">

                                    @if (serialNumber.ADUsers != null)
                                    {
                                        @serialNumber.ADUsers.Name
                                    }
                                    else if (serialNumber.Group != null)
                                    {
                                        @serialNumber.Group.Name <img src="/media/icons/static/g.svg">
                                    }
                                    else
                                    {
                                        @Html.Raw("N/A")
                                    }
                                </span>
                                <select name="ADUsersId" class="form-control edit-input" style="display:none;">
                                    @foreach (var adUsers in ViewBag.ADUsersId)
                                    {
                                        <option value="@adUsers.Value" selected="@(adUsers.Value == serialNumber.ADUsers?.Name)">
                                            @adUsers.Text
                                        </option>
                                    }
                                </select>
                            </td>
                            <td class="serial-condition">
                                <span class="display-value" >@serialNumber.Condition?.Name</span>
                                <select name="ConditionId" class="form-control edit-input" style="display:none;">
                                    @foreach (var condition in ViewBag.ConditionId)
                                    {
                                        <option value="@condition.Value" selected="@(condition.Value == serialNumber.ConditionId.ToString())">
                                            @condition.Text
                                        </option>
                                    }
                                </select>
                            </td>
                            <td class="serial-department">
                                <span class="display-value">@serialNumber.Department?.Name</span>
                                <select name="DepartmentId" class="form-control edit-input" style="display:none;">
                                    @foreach (var department in ViewBag.DepartmentId)
                                    {
                                        <option value="@department.Value" selected="@(department.Value == serialNumber.DepartmentId.ToString())">
                                            @department.Text
                                        </option>
                                    }
                                </select>
                            </td>
                            <td class="serial-location">
                                <span class="display-value">@serialNumber.Location?.Name</span>
                                <select name="LocationId" class="form-control edit-input" style="display:none;">
                                    @foreach (var location in ViewBag.LocationId)
                                    {
                                        <option value="@location.Value" selected="@(location.Value == serialNumber.LocationId.ToString())">
                                            @location.Text
                                        </option>
                                    }
                                </select>
                            </td>
                            <td class="serial-checkin">
                                <span class="display-value">@serialNumber.Creation?.ToString("yyyy-MM-dd")</span>
                                <input type="date" name="Creation" value="@serialNumber.Creation?.ToString("yyyy-MM-dd")" class="form-control edit-input" style="display:none;" />
                            </td>
                            <td class="serial-allocation">
                                <span class="display-value">@serialNumber.Allocation?.ToString("yyyy-MM-dd")</span>
                                <input type="date" name="Allocation" value="@serialNumber.Allocation?.ToString("yyyy-MM-dd")" class="form-control edit-input" style="display:none;" />
                            </td>
                            <td class="serial-allocatedBy">
                                @if (serialNumber.AllocatedBy == null)
                                {
                                    <span>No User</span>
                                }
                                else
                                {
                                    <span class="display-value">@serialNumber.AllocatedBy</span>
                                }
                                @* <select name="AllocatedBy" class="form-control edit-input" style="display:;">
                                    <option>Choose a User</option>
                                    @foreach (var sysUser in ViewBag.Users as SelectList)
                                    {
                                        <option value="@sysUser.Value" selected="@(sysUser.Value == serialNumber.AllocatedBy?.ToString())">
                                            @sysUser.Text
                                        </option>
                                    }
                                </select> *@
                            </td>
                            <td>
                                @* <a class="btn btn-outline-warning btn-sm" asp-controller="SerialNumbers" asp-action="Edit" asp-route-id="@serialNumber.Id">Edit</a> | *@
                                <button type="button" class="btn btn-sm btn-outline-warning" data-toggle="modal" data-target="#editModal" onclick="loadEditPartial('SerialNumbers',@serialNumber.Id)">
                                    Edit
                                </button> |
                                <a class="btn btn-outline-primary btn-sm" asp-controller="SerialNumbers" asp-action="ViewHistory" asp-route-id="@serialNumber.Id">View History</a> |
                              @*   <form asp-action="DeleteSerialNumber" method="post" class="delete-form" style="display:inline;">
                                    <input type="hidden" name="Id" value="@serialNumber.Id" />
                                    <input type="hidden" name="ModelId" value="@Model.Model.Id" />
                                    <input type="submit" value="Delete" class="btn btn-outline-danger btn-sm delete-button" style="margin-left: 5px;" />
                                </form> *@
                                <button type="button" class="btn btn-sm btn-outline-danger" data-toggle="modal" data-target="#deleteModal" onclick="loadDeleteAlloPartial('SerialNumbers',@serialNumber.Id)">
                                    Delete
                                </button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>



        </div>
 </div>
</div>

<!-- Custom Modal -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Confirm Deletion</h2>
        <p>Are you sure you want to delete the selected serial number(s)?</p>
        <div class="modal-actions">
            <button id="confirmDelete" class="btn btn-danger">Delete</button>
            <button id="cancelDelete" class="btn btn-secondary">Cancel</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $("#uploadForm").submit(function (e) {
        e.preventDefault();
        var formData = new FormData();
        formData.append("file", $("#fileInput")[0].files[0]);
        formData.append("modelId", $("#modelId").val());

        $.ajax({
        url: "/SerialNumbers/UploadFile",
        type: "POST",
        data: formData,
        processData: false,
        contentType: false,
        success: function (response) {
        $("#previewContainer").html(response);
        },
        error: function (xhr) {
        alert(xhr.responseText);
        }
        });
        });
    </script>

    <script>
        $(document).ready(function () {
            var table = $('#serialsTable').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ],
                initComplete: function () {
                    filterTable();
                }
            });

            $('.column-toggle').change(function () {
                var columnIndex = $(this).data('column');
                table.column(columnIndex).visible(this.checked);
            });

            function filterTable() {
                var nameValue = $('#nameFilter').val().toLowerCase();
                var userValue = $('#userFilter').val().toLowerCase();
                var conditionValue = $('#conditionFilter').val();
                var departmentValue = $('#departmentFilter').val();
                var locationValue = $('#locationFilter').val();
                var checkinValue = $('#checkinFilter').val();
                var allocationValue = $('#allocationFilter').val();

                table.rows().every(function (rowIdx, tableData, node) {
                    var row = $(node);
                    var nameMatch = row.find('.serial-name .display-value').text().toLowerCase().indexOf(nameValue) > -1;
                    var userMatch = row.find('.serial-user .display-value').text().toLowerCase().indexOf(userValue) > -1;
                    var conditionMatch = conditionValue === '' || row.find('.serial-condition .display-value').text() === $('#conditionFilter option:selected').text();
                    var departmentMatch = departmentValue === '' || row.find('.serial-department .display-value').text() === $('#departmentFilter option:selected').text();
                    var locationMatch = locationValue === '' || row.find('.serial-location .display-value').text() === $('#locationFilter option:selected').text();
                    var checkinMatch = checkinValue === '' || row.find('.serial-checkin .display-value').text().indexOf(checkinValue) > -1;
                    var allocationMatch = allocationValue === '' || row.find('.serial-allocation .display-value').text().indexOf(allocationValue) > -1;

                    $(node).toggle(nameMatch && userMatch && conditionMatch && departmentMatch && locationMatch && checkinMatch && allocationMatch);
                });

                table.draw();
            }

            $('#nameFilter').on('keyup', filterTable);
            $('#userFilter').on('keyup', filterTable);
            $('#conditionFilter').on('change', filterTable);
            $('#departmentFilter').on('change', filterTable);
            $('#locationFilter').on('change', filterTable);
            $('#checkinFilter').on('change', filterTable);
            $('#allocationFilter').on('change', filterTable);

            var formToSubmit;
            var selectedIds = [];

            $('.edit-button').on('click', function (event) {
                event.preventDefault();

                var button = $(this);
                var row = button.closest('tr');
                var inputs = row.find('.edit-input');
                var displayValues = row.find('.display-value');
                var form = button.closest('form');

                if (button.val() === 'Edit') {
                    inputs.show();
                    displayValues.hide();
                    button.val('Save');

                    inputs.each(function () {
                        var input = $(this);
                        form.append(input.clone().attr('type', 'hidden')); // Clone and append to form
                        input.hide(); // Hide original input
                    });
                    row.find('select.edit-input').each(function () {
                        var select = $(this);
                        form.append(select.clone().attr('type', 'hidden')); // Clone and append to form
                        select.hide(); // Hide original select
                    });
                } else {
                    form.submit();
                }
            });

            $('.delete-button').on('click', function (event) {
                event.preventDefault();
                formToSubmit = $(this).closest('form');
                $('#deleteModal').css('display', 'block');
            });

            $('#multiDeleteButton').on('click', function (event) {
                event.preventDefault();
                selectedIds = $('.select-checkbox:checked').map(function () {
                    return $(this).val();
                }).get();
                if (selectedIds.length > 0) {
                    $('#deleteModal').css('display', 'block');
                }
            });

            $('#confirmDelete').on('click', function () {
                if (selectedIds.length > 0) {
                    var form = $('<form>', {
                        method: 'POST',
                        action: '/Models/DeleteMultipleSerialNumbers'
                    });
                    selectedIds.forEach(function (id) {
                        form.append($('<input>', {
                            type: 'hidden',
                            name: 'Ids',
                            value: id
                        }));
                    });
                    form.append($('<input>', {
                        type: 'hidden',
                        name: 'ModelId',
                        value: '@Model.Model.Id'
                    }));
                    $('body').append(form);
                    form.submit();
                } else {
                    formToSubmit.submit();
                }
            });

            $('#cancelDelete').on('click', function () {
                $('#deleteModal').css('display', 'none');
            });

            $('.close').on('click', function () {
                $('#deleteModal').css('display', 'none');
            });

            window.onclick = function (event) {
                if (event.target == $('#deleteModal')[0]) {
                    $('#deleteModal').css('display', 'none');
                }
            };

            $('.select-checkbox').on('change', function () {
                var hasSelected = $('.select-checkbox:checked').length > 0;
                $('#multiDeleteButton').prop('disabled', !hasSelected);
                $('#multiDeleteButton').toggleClass('btn-danger', hasSelected);
                $('#multiDeleteButton').toggleClass('btn-secondary', !hasSelected);
            });

            $('#serialsTable tbody tr').on('click', function (event) {
                if (event.target.type !== 'checkbox') {
                    var checkbox = $(this).find('.select-checkbox');
                    checkbox.prop('checked', !checkbox.prop('checked'));
                    checkbox.trigger('change');
                }
            });

            $('#toggleFilterButton').on('click', function () {
                $('#filterSection').toggle();
            });
        });
    </script>


    <script>
        var input = document.getElementById('serialInput');
        input.focus();
        input.select();
    </script>

    <style>
        .fixed-column {
            position: fixed;
            top: 10;
            background-color: white;
            z-index: 1000;
        }
    </style>
}